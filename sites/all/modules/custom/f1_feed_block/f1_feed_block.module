<?php

/**
 * @file
 * Collect the titles from a Feed Item nod via URL link XML/RSS feed import and display those in a block.
*/


/**
 *Implements hook_menu().
 */

function f1_feed_block_menu(){
  $items['admin/config/f1_feed_block'] = array(
    'title' => 'F1 Feed Block Settings',
    'description' => 'Administer the F1 Feed Block settings',
    'page callback' => 'drupal_get_form',
    'page arguements' => array('f1_feed_block_settings_form'),
    'access arguements' => array('manage F1 feed block settings'),
    'file' => 'f1_feed_block.admin.inc',
  );
  $items['admin/reports/f1_feed_block'] = array(
    'title' => "F1 Feed Block Posts",
    'description' => 'View all the F1 Feed imported posts.',
    'page callback' => 'f1_feed_block_posts',
    'access arguments' => array('view F1 feed block posts'),
    'file' => 'f1_feed_block.admin.inc',
  );
  return $items;
}

/**
 * Any time you wna to have a callback to an admin file or source, you will have it be
 * an admin.inc file, otherwise you'll have it go towards a pages.inc file.
 */


/**
 * Implements hook_permission().
 */

 function f1_feed_block_permission(){
   return array(
     'view f1 feed block posts' => array(
       'title' => t('View all the F1 Feed imported posts on the main F1 posts page'),
       'description' => t('View all the Formula 1 imported posts on the main posts page'),
     ),
     'change RSS feed used in f1 feed' => array(
       'title' => t('Change the RSS feed used in the Formula 1 feed'),
       'description' => t('Add new RSS feed to be imported'),
     ),
     'manage f1 feed block settings' => array(
       'title' => t('Manage Formula 1 Feed settings'),
       'description' => t('Allow user to manage the Formula 1 feed block settings'),
     ),
   );
 }


 /**
 *code from tutorial
 */
 function f1_feed_block_form_node_form_alter(&$form, $form_state, $form_id) {
	//dsm($form_id);  // print form ID to messages
	$node = $form['#node'];
	//Perform our check to see if we should be performing an action
	$types = variable_get('f1_feed_block_types', array());
	//Check if this node type is enabled for the FB Feeds Block
	//and that the user has access to the per-node settings
	if ($types[$node->type] && user_access('manage f1 feed block settings')) {
		//Add a new fieldset with a checkbox for per-node setting.
		$form['f1_feed_block'] = array(
		'#title'=> t('F1 Feed Block'),
		'#type' => 'fieldset',
		'#collapsible' => TRUE,
		'#collapsed' => FALSE,
		'#group' => 'additional_settings',
		);
		$form['f1_feed_block']['f1_feed_block_enabled'] = array(
		'#title' => t('Allow this node to be posted to the F1 Block'),
		'#type' => 'checkbox',
		'#default_value' => isset($node->f1_feed_block_enabled) ? $node->f1_feed_block_enabled : FALSE,
		);
	}
}

// Implements hook_node_load().

function f1_feed_block_node_load($nodes, $types) {
  foreach ($nodes as $nid => $node) {
    // Add f1_feed_block data to the node oject when it is loaded.
    $node->f1_feed_block_enabled = f1_feed_block_get_node_enabled($node->nid);
  }
}

// Implements hook node insert

function f1_feed_block_node_insert($node) {
  if($node->f1_feed_block_enabled) {
    // If f1 Feed Block is enabled, store that and record it to DB
    f1_feed_block_set_node_enabled($node->nid);
  }
}
// Implements hook node update

function f1_feed_block_node_update($node) {
  f1_feed_block_delete_node_enabled($node->nid);
}

// Implements hook node delete
function f1_feed_block_node_delete($node) {
  f1_feed_block_delete_node_enabled($node->nid);
}


// Determine if a node is set
// @param is $nid
// the node id of the node in question
// @return boolean

function f1_feed_block_get_node_enabled($nid) {
  if(is_numeric($nid)) {
    $result = db_query("SELECT nid from {f1_feed_block_enabled} WHERE nid = :nid", array('nid' => $nid))->fetchField();
    if($result) {
      return TRUE;
    }
    }
    return FALSE;
}

// Add an entry for a node's F1 Feed Block setting

function f1_feed_block_set_node_enabled($nid) {
	if (is_numeric($nid)) {
		if (!f1_feed_block_get_node_enabled($nid)) {
			$jump = db_insert('f1_feed_block_enabled')
			 ->fields(array('nid' => $nid))
			 ->execute();
		}
	}
}

// Remove an entry for a node F1 feed block setting - execute a delete
function f1_feed_block_delete_node_enabled($nid) {
  if(is_numeric($nid)) {
    $vump = db_delete('f1_feed_block_get_node_enabled')
    ->condition('nid', $nid)
    ->execute();
  }
}

function f1_feed_block_block_info() {
  $block['posts'] = array(
    'info' => t('F1 Posts'),
    'cache' => DRUPAL_NO_CACHE,
  );
  return $block;
}

function f1_feed_block_block_view($delta = '') {
  switch ($delta) {
    case 'posts':
    $block['subject'] = t("F1 Feed Block Posts");
    $block['content'] = f1_feed_block_block_contents($delta);
    return $block
    break;
  }
}
